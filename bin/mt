#!/usr/bin/env python3
import os, sys
import subprocess as sp

script_dir = '~/scripts/'

labels = { 'mnt': 'map-usb',
           'ext': 'map-ext',
           'win': 'win10'}

def device_mountpoint(device_id):
    if device_id.split('.')[-1] == 'iso':
        return device_id,'/media/iso'

    else:
        if len(device_id) == 1:
            device_id += '1'
        device = '/dev/sd'+device_id
        mountpoint = '/media/'+device_id
        return device,mountpoint

if len(sys.argv) == 1:
    sys.argv.append('mnt')

if sys.argv[1] in labels.keys():
    mount_options = sys.argv[2:]
    call_list = ['udevil','mount'] + mount_options + \
                ['/dev/disk/by-label/'+labels[sys.argv[1]],'/media/'+sys.argv[1]]
    print(' '.join(call_list))
    exitcode = sp.call(call_list)
    if exitcode != 0:
        if exitcode == 14: # mount failed; operation not permitted
            print("\nRetrying mount with read-only option...")
            call_list += ["-o","ro"]
            print(' '.join(call_list))
            sp.check_call(call_list)
        else:
            exit(exitcode)
    exit()

elif sys.argv[1] == '-u':
    if len(sys.argv) > 3:
        print('Select one drive to unmount')
        exit()

    if len(sys.argv) == 2:
        sys.argv.append('mnt')

    if sys.argv[2] in labels.keys():
        mountpoint = '/media/'+sys.argv[2]
    else:
        device,mountpoint = device_mountpoint(sys.argv[2])

    call_list = ['udevil','umount',mountpoint]
    print(' '.join(call_list))
    sp.call(call_list)
    exit()

else:
    device,mountpoint = device_mountpoint(sys.argv[1])
    mount_args = sys.argv[2:]

    call_list = ['udevil','mount'] + mount_args + [device,mountpoint]
    print(' '.join(call_list))
    sp.call(call_list)
    exit()
