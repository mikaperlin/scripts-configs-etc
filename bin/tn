#!/bin/zsh

if [ $# = 0 ]; then
  echo "no arguments given"
  exit 1
fi

wireless_interface=wlp3s0

home_dir=/home/perlinm
research_dir=$home_dir/Workspace/research

osu_vpn_split=$home_dir/.osu-split-tunnel.conf
osu_vpn_full=$home_dir/.osu-full-tunnel.conf

osu_vpn_split_pid=$(ps aux | grep vpnc | grep -v grep \
                         | grep $osu_vpn_split | awk '{print $2}')
osu_vpn_full_pid=$(ps aux | grep vpnc | grep -v grep \
                        | grep $osu_vpn_full | awk '{print $2}')
osu_vpn_up=
if [ $osu_vpn_split_up ] || [ $osu_vpn_full_up ]; then
  osu_vpn_up=true
fi

osu_net_up=$(iwconfig $wireless_interface | grep ESSID | grep OSU)

osu_connection_up=
if [ $osu_net_up ] || [ $osu_vpn_up ]; then
  osu_connection_up=true
fi

if [ $1 = osu ]; then

  if [ $# = 1 ]; then
    echo "usage: tn osu [status/up/down] [split/full]"
    exit 1
  fi

  if [ $2 = status ]; then

    if [ $osu_net_up ]; then
      echo "OSU network up"
    elif [ $osu_vpn_split_pid ]; then
      echo "OSU split tunnel up"
    elif [ $osu_vpn_full_pid ]; then
      echo "OSU full tunnel up"
    else
      echo "OSU network and tunnels down"
    fi

  elif [ $2 = up ]; then

    if [ $osu_connection_up ]; then
      $0 status
    else
      if [ $# = 2 ]; then
        echo "opening OSU split tunnel"
        sudo vpnc $vpn_split
      else
        echo "opening OSU full tunnel"
        sudo vpnc $vpn_full
      fi
    fi

  elif [ $2 = down ]; then

    if ! [ $osu_vpn_split_pid ] && ! [ $osu_vpn_full_pid ]; then
      echo "no OSU tunnels open"
    fi
    if [ $osu_vpn_split_pid ]; then
      echo "closing OSU split tunnel"
      sudo kill $osu_vpn_split_pid
    fi
    if [ $osu_vpn_full_pid ]; then
      echo "closing OSU full tunnel"
      sudo kill $osu_vpn_full_pid
    fi
  fi

elif [ $1 = mox ]; then

  if ! [ $osu_connection_up ]; then
    $0 status
    $0 osu up
  fi

  remote_addr=perlinm@rogue.ne.oregonstate.edu
  mox_dir=mox

  if [ $# = 1 ]; then
    ssh $remote_addr
  else
    if [ $2 = up ]; then
      src=$research_dir/
      dest=$remote_addr:
    elif [ $2 = down ]; then
      src=$remote_addr:
      dest=$research_dir/
    else
      echo "usage: tn mox [up/down]"
      exit 1
    fi
    rsync -ulrvt -e ssh $src$mox_dir $dest
  fi

elif [ $1 = deft ]; then

  remote_addr=perlinm@quipu.physics.oregonstate.edu
  sw_mc_dir=deft/src/Monte-Carlo
  deft_dir=deft

  if [ $# = 1 ]; then
    mosh $remote_addr
  else
    if [ $2 = commit ]; then
      cd $research_dir/$deft_dir
      for file in `git diff --name-only` `git diff --name-only --cached`; do
        if ! [ $(git ls-files --deleted | grep $file) ]; then
          rsync -ulrvt -e ssh $file $remote_addr:$deft_dir/$file
        fi
      done
      exit 0
    elif [ $2 = up ]; then
      src=$research_dir/
      dest=$remote_addr:
    elif [ $2 = down ]; then
      src=$remote_addr:
      dest=$research_dir/
    else
      echo "usage: tn deft [up/down/commit]"
      exit 1
    fi
    rsync -ulrvt -e ssh $src$deft_dir/papers/histogram/data \
          $dest$deft_dir/papers/histogram/
    rsync -ulrvt -e ssh $src$deft_dir/papers/histogram/figs \
          $dest$deft_dir/papers/histogram/
    rsync -ulrvt -e ssh $src$deft_dir/papers/histogram/histogram-paper.pdf \
          $dest$deft_dir/papers/histogram/
    rsync -ulrvt -e ssh $src$deft_dir/papers/histogram/paper.pdf \
          $dest$deft_dir/papers/histogram/
    rsync -ulrvt -e ssh $src$deft_dir/papers/histogram/run-swmc.py \
          $dest$deft_dir/papers/histogram/
    rsync -ulrvt -e ssh $src$deft_dir/papers/histogram/run-param-sims.py \
          $dest$deft_dir/papers/histogram/
    rsync -ulrvt -e ssh $src$deft_dir/src/Monte-Carlo/square-well-monte-carlo.cpp \
          $dest$deft_dir/src/Monte-Carlo
    rsync -ulrvt -e ssh $src$deft_dir/src/Monte-Carlo/square-well.cpp \
          $dest$deft_dir/src/Monte-Carlo
    rsync -ulrvt -e ssh $src$deft_dir/src/Monte-Carlo/square-well.h \
          $dest$deft_dir/src/Monte-Carlo
  fi

elif [ $1 = paho ]; then
  ssh paho.asuscomm.com

elif [ $1 = onid ]; then
  ssh shell.onid.oregonstate.edu

else
  echo "no valid command given"
fi

