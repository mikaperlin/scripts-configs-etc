### these notes assume that:
###   A. a base arch system has been installed (base base-devel)
###   A. the system boots properly
###   B. the system can connect to a wired interface

####################
# basic
####################

# make and enable swapfile
fallocate -l 8GB /swapfile
chmod 0600 /swapfile
mkswap /swapfile
swapon /swapfile
echo "/swapfile none swap defaults 0 0" >> /etc/fstab

# sort mirrors
pacman -S reflector
cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist~
reflector --verbose --country 'United States' -l 200 -p http --sort rate > ~/mirrorlist
pacman -Syy
# to rank mirrors in a mirror list: rankmirrors -n 0 FILE

# install linux lernels
pacman -S linux linux-lts

# color pacman output and enable multilib repo
#-- manually uncomment line 'Color' and enable the multilib repo in /etc/pacman.conf --#
pacman -Syy

# daemon to generate system entropy
pacman -S haveged
systemctl enable haveged
systemctl start haveged

# initialize pacman keyring
pacman-key --init
pacman-key --populate archlinux

# basic console tools
pacman -S sudo linux-tools vim wget rsync openssh sshfs git htop udevil time acpi ntfs-3g mosh gnome-keyring

# keyboard configuration
localectl set-x11-keymap us,us pc105 colemak, shift:both_capslock,caps:backspace
loadkeys colemak
echo "KEYMAP=colemak" > /etc/vconsole.conf
kbdrate -d 200 -r 60
# (after copying over kbdrate.service file)
systemctl enable kbdrate.service
systemctl start kbdrate.service

# shell interpreter
pacman -S zsh

# user
useradd -m -G wheel,power -s /usr/bin/zsh perlinm
### manually run 'visudo' and allow members of wheel to run any command

# blacklist pc speaker
echo "blacklist pcspkr" > /etc/modprobe.d/nobeep.conf

# locale
### uncomment en_GB.UTF-8 UTF-8 and en_US.UTF-8 UTF-8 in /etc/locale.gen
locale-gen
localectl set-locale LANG=en_US.UTF-8 LC_TIME=en_GB.UTF-8

####################
# console utilities
####################

# C/C++ debugging and caching
pacman -S valgrind ccache
ln -sf `which ccache` /usr/local/bin/gcc
ln -sf `which ccache` /usr/local/bin/g++

# python packages
pacman -S python python2 python-numpy python2-numpy python-matplotlib python2-matplotlib \
  python-sympy python2-sympy python-scipy python2-scipy ipython ipython2 \
  python-qutip

# haskell packages
pacman -S ghc cabal-install happy alex
### possibly inquire into haddock

# java packages
pacman -S jre9-openjdk

# latex packages
pacman -S texlive-most

# emacs and auctex
pacman -S emacs emacs-python-mode emacs-haskell-mode auctex
# perform manually in emacs: M-x list-packages, select use-package with x to install

# rust programming language
pacman -S rustup cargo
rustup install stable
rustup default stable

# misc.
pacman -S exa vim-systemd

####################
# graphic utilities
####################

# xorg
pacman -S xorg xorg-drivers xorg-apps
# if not all xorg-drivers, at least xf86-video-intel might be necessary for xbacklight

# kde5
pacman -S plasma-meta kde-applications

# xfce4
pacman -S xfce4 xfce4-goodies

# xmonad plus window compositor
pacman -S xmonad xmonad-contrib xcompmgr

# basic X utilities
pacman -S xdotool xclip xorg-xclipboard

# nested X environment to run within X
pacman -S xorg-server-xephyr

# network management
pacman -S wicd wicd-gtk network-manager-applet

# graphic development utilities
pacman -S meld gparted

# video and audio management tools
pacman -S arandr pulseaudio pavucontrol

# camera settings
pacman -S v4l2ucp

# browser
pacman -S firefox icedtea-web flashplugin

# misc.
pacman -S feh geeqie vlc mplayer smplayer gimp inkscape lxappearance wine evince scrot cmake

# office suite and dictionary
pacman -S libreoffice-fresh aspell-en

# network printer utilities
pacman -S cups hplip

# intel microcode
pacman -S intel-ucode
### re-generate grub: grub-mkconfig -o /boot/grub/grub.cfg

# display manager and theme
pacman -S lightdm lightdm-gtk-greeter lightdm-gtk-greeter-settings
pacman -S numix-gtk-theme gtk-engine-murrine
systemctl enable lightdm
### manually launch 'lightdm-gtk-greeter-settings' to configure
### for autologin, add user to autologin group:
###   sudo groupadd -r autologin && sudo gpasswd -a perlinm autologin

# launcher
pacman -S bashrun xterm
### manually add $HOME/bin to path in ~/.config/bashrun/rc, then run 'bashrun --restart'
### add font option, e.g. '-fa 'Monospace' -fs 14', to xterm_options in ~/.config/bashrun/rc

# start network daemon
sudo systemctl enable NetworkManager
sudo systemctl start NetworkManager

# prevent system lag when copying large files between different partitions
sudo bash -c 'echo "never" > /sys/kernel/mm/transparent_hugepage/enabled'

####################
# AUR
####################

### log in as perlinm

# auto retrieve gpg keys
cp /usr/share/gnupg/gpg-conf.skel ~/.gnupg/gpg.conf
echo '\nkeyserver-options auto-key-retrieve' >> ~/.gnupg/gpg.conf

# pacmatic, yay, and powerpill
pacman -S pacmatic
cd /tmp
wget http://aur.archlinux.org/cgit/aur.git/snapshot/cower.tar.gz
tar xvzf cower.tar.gz && cd cower
makepkg -sri
cd ..
wget http://aur.archlinux.org/cgit/aur.git/snapshot/yay.tar.gz
tar xvzf yay.tar.gz && cd yay
makepkg -sri
yay -S powerpill

### make sure that the following line is in ~/.zshrc to make pacmatic call yay
export pacman_program="pacaur"

### manually change SigLevel line to 'SigLevel = PackageRequired DatabaseOptional'
###   in /etc/pacman.conf

# misc. AUR packages
pacmatic -S pamixer pulseaudio-ctl qbittorrent deluge wps-office ripgrep qpdfview
pacmatic -S laptop-mode-tools
sudo systemctl enable laptop-mode

# to disable autosuspend for USB devices, edit /etc/laptop-mode/conf.d/runtime-pm.conf
# and set CONTROL_RUNTIME_AUTOSUSPEND=0

# tools to manipulate pdf filies
pacmatic -S pdftk-bin pdfshuffler

# tool to build latex projects
pacmatic -S latex-mk

# reference management software
pacmatic -S zotero
### manually install addons:
###   FireTray, ZotFile, zutilo, zotero-better-bibtex, zotero-shortdoi

# ycmd (command completion) tool for emacs
pacmatic -S vim-youcompleteme-git

####################
# configurations
####################

# make laptop respond properly to lid
### manually uncomment 'HandleLidSwitch' in /etc/systemd/logind.conf
### manually add file /etc/sudoers.d/lid-swidch with line
###   'ALL ALL=NOPASSWD:/home/perlinm/bin/lid-switch'

# configure git
git config --global user.name "Michael A. Perlin"
git config --global user.email mika.perlin@gmail.com
git config --global core.editor=emacs

# don't clear boot messages
sudo mkdir -p /etc/systemd/system/getty@tty1.service.d
sudo touch /etc/systemd/system/getty@tty1.service.d/noclear.conf
### manually write '[Service]\nTTYVTDisallocate=no' to the above file

# fonts
pacmatic -S ttf-google-fonts-typewolf ttf-ms-fonts ttf-oxygen ttf-droid ttf-liberation ttf-ubuntu-font-family consolas-font

### pretty fonts!
pacmatic -S freetype2 fontconfig cairo
pacmatic -S fonts-meta-base fonts-meta-extended-lt
ln -s /etc/fonts/conf.avail/11-lcdfilter-default.conf /etc/fonts/conf.d
ln -s /etc/fonts/conf.avail/10-sub-pixel-rgb.conf /etc/fonts/conf.d

# widget and themes
pacmatic -S moka-icon-theme
### manually enable themes via lxappearance
### manually set gtk theme for qt via qtconfig-qt4
### maybe set greeter theme via lightdm-gtk-greeter-settings

# google chrome and talk plugin
pacmatic -S google-chrome google-talkplugin

# firefox browser sound plugins - if necessary
# pacmatic -S gstramer0.10-plugins
### if there are sound problems, change 'media.gstreamer.enabled' to 'false' in about:config
### if youtube does not work in firefox, use flash instead of html5

# equivalent of quicktime for linux
pacmatic -S gecko-mediaplayer

### configure touchpad via /etc/X11/xorg.conf.d/99-touchpad.conf
### see man libinput.4

### manually set cursor theme via lxappearance
### set cursor theme at greeter by writing '[Icon Theme]\nInherits=cursor_name'
###   to /usr/share/icons/default/index.theme

### to enable running a script without invoking sudo,
###   write 'ALL ALL=NOPASSWD:script_path' to /etc/sudoers.d/script_name
### EXTREMELY IMPORTANT: make sure NOBODY can write to the above script, and that the script
###   is owned by root, i.e. run 'chmod 0555 script_path' and 'chown root.root script_path'
###   before using the script, run EXTENSIVE tests to make sure that it works properly
### example use: write 'ALL ALL=NOPASSWD:/usr/bin/fdisk -l' to '/etc/sudoers.d/fdisk-l'

# give user NTFS mounting permissions
sudo gpasswd -a perlinm disk
pacmatic -S ntfs-3g-fuse
### for ntfs drive management, add "dmask=0022" to default_options_ntfs in
###   in /etc/udevil/udevil/udevil.conf, copy default_options_ntfs to allowed_options_ntfs,
###   and add "ro" to the former list
### to allow users to mount an ntfs windows partition, add to the same file:
###   allowed_internal_devices_ntfs = /dev/sda*

### manually configure /boot/loader/loader.conf (on UEFI systems) as needed

# remove default tab completion rules for 'mt'
sudo mv /usr/share/zsh/functions/Completion/Unix/_mt \
  /usr/share/zsh/functions/Completion/Unix/_mt~

# mount windows partition
### add to /etc/fstab: UUID=? /media/win ntfs rw,relatime,fmask=0644,dmask=0755,permissions 0 2
### insert UUID appropriately
### if the windows filesystem is different, change ntfs appropriately and remove permissions

# printing
sudo groupadd printadmin
sudo gpasswd -a perlinm lp
sudo gpasswd -a perlinm printadmin
### manually append "printadmin" to line "SystemGroup sys root" in /etc/cups/cups-files.conf
### go to "localhost:631" in browser to configure cups
### see "man lp" or "localhost:631" for command-line pinting tools; cupsenable/cupsdisable
### set default printer via 'lpoptions -d printer_name'
### view ArchWiki page CUPS for additional help

# scanning
sudo gpasswd -a perlinm scanner
pacmatic -S iscan iscan-data
### manually install whatever printer/scanner drivers (and maybe plugins) are needed
### for mom's epson XP-810 printer: iscan-plugin-network epson-inkjet-printer-201308w
### for any epson printer, find ip address via 'scanimage -L'
###   and add line 'net scanner_ip' to /etc/sane.d/epkowa.conf
### view ArchWiki page SANE for scanner help

####################
# miscellaneous
####################

# session management - does not currently work
# cd /tmp
# git clone https://github.com/zaxtax/xmonad-sessions.git
# cd xmonad-sessions/
# mkdir -p ~/.xmonad/lib
# cp ViewDoc.hs ~/.xmonad/lib
# ghc --make saveDocument
# mv saveDocument /home/user/bin

# switching keyboard layouts
pacmatic -S xkb-switch

# volume notification
pacmatic -S volnoti

# pidgin (chat client)
pacmatic -S pidgin pidgin-extprefs pidgin-gnome-keyring purple-hangouts-hg purple-facebook

# pidgin plugin to suppress name change announcements
cd ~/src
git clone git clone https://github.com/EionRobb/pidgin-ignore-nickchange.git
cd pidgin-ignore-nickchange && make
ln -sf ~/src/pidgin-ignore-nickchange/nickchange.so ~/.purple/plugins/

# dropbox
pacmatic -S dropbox

# virtual machine + permissions to use USB devices
pacmatic -S virtualbox
sudo gpasswd -a perlinm vboxusers
### must run 'modprobe vboxdrv' before running virtualbox
### if vboxdrv module does not exist, check installation of linux-[lts-]headers

# edit grub options
pacaur -S grub-customizer
### to use grub-reboot requires "GRUB_DEFAULT=saved" in /etc/default/grub
### for hidden grub menu, set 'GRUB_FORCE_HIDDEN_MENU="true"' in /etc/default/grub
###   and copy over /etc/grub.d/31_hold_shift

# optimized multi-threaded mathematical routines
pacaur -S intel-mkl
### if the above does not work, perform the following:
### cd /tmp
### wget http://aur.archlinux.org/cgit/aur.git/snapshot/intel-parallel-studio-xe.tar.gz
### tar zxvf intel-parallel-studio-xe.tar.gz && cd intel-parallel-studio-xe
### makepkg -i
### sudo pacman -U intel-mkl-*.pkg.tar.gz

# fac: a build system
mkdir -p ~/src && cd ~/src
git clone https://github.com/droundy/fac.git
cd ~/src/fac && ./build/linux.sh
./fac

# fac dependencies
pacmatic -S python-markdown

# deft dependencies
pacmatic -S scons gnuplot haskell-hunit mlocate

# for using r packages in python3
pacmatic -S python-rpy2

# todo:
# fix/verify deft dependencies
